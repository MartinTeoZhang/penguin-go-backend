<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryzin.penguin.admin.dao.FunExpUserMapper">
  <resultMap id="BaseResultMap" type="com.ryzin.penguin.admin.model.FunExpUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="exp_id" jdbcType="BIGINT" property="expId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, exp_id, user_id, status, create_by, create_time, last_update_by, last_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fun_exp_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fun_exp_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ryzin.penguin.admin.model.FunExpUser">
    insert into fun_exp_user (id, exp_id, user_id, status,
      create_by, create_time, last_update_by, 
      last_update_time)
    values (#{id,jdbcType=BIGINT}, #{expId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT},
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ryzin.penguin.admin.model.FunExpUser">
    insert into fun_exp_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="expId != null">
        exp_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateBy != null">
        last_update_by,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="expId != null">
        #{expId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <delete id="delete" parameterType="java.lang.Long">
    delete from fun_exp_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByExpIdAndUserId" parameterType="java.lang.Long">
  	delete from fun_exp_user
    where exp_id = #{expId,jdbcType=BIGINT}
    and
    user_id = #{userId,jdbcType=BIGINT} 
  </delete>
  
  <select id="findByExpIdAndUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select * from fun_exp_user
    where exp_id = #{expId,jdbcType=BIGINT}
    and
    user_id = #{userId,jdbcType=BIGINT} 
  </select>
  
  <update id="update" parameterType="com.ryzin.penguin.admin.model.FunExpUser">
    update fun_exp_user
    <set>
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="expId != null">
        exp_id = #{expId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null">
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from fun_exp_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="findByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select * from fun_exp_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  
  <select id="findPage" resultMap="BaseResultMap">
    select * from fun_exp_user
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.ryzin.penguin.admin.model.FunExpUser">
    update fun_exp_user
    set exp_id = #{expId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findExpUsers" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fun_exp_user
    where exp_id = #{expId,jdbcType=BIGINT} and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fun_exp_user
  </select>
  <delete id="deleteByExpId" parameterType="java.lang.Long">
    delete from fun_exp_user
    where exp_id = #{expId,jdbcType=BIGINT}
  </delete>
  <select id="getExpUserCount"  parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(*) 
        from fun_exp_user
        where exp_id = #{expId,jdbcType=BIGINT}
  </select>
</mapper>